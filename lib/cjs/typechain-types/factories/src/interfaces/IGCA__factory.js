"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IGCA__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "BucketAlreadyFinalized",
        type: "error",
    },
    {
        inputs: [],
        name: "BucketIndexOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "BucketSubmissionEnded",
        type: "error",
    },
    {
        inputs: [],
        name: "BucketSubmissionNotOpen",
        type: "error",
    },
    {
        inputs: [],
        name: "CallerNotGCA",
        type: "error",
    },
    {
        inputs: [],
        name: "CallerNotGCAAtIndex",
        type: "error",
    },
    {
        inputs: [],
        name: "CallerNotGovernance",
        type: "error",
    },
    {
        inputs: [],
        name: "CompensationPlanLengthMustBeGreaterThanZero",
        type: "error",
    },
    {
        inputs: [],
        name: "EmptyRoot",
        type: "error",
    },
    {
        inputs: [],
        name: "GCCAlreadySet",
        type: "error",
    },
    {
        inputs: [],
        name: "IndexDoesNotMatchNextProposalIndex",
        type: "error",
    },
    {
        inputs: [],
        name: "InsufficientShares",
        type: "error",
    },
    {
        inputs: [],
        name: "NoBalanceToPayout",
        type: "error",
    },
    {
        inputs: [],
        name: "NotGCA",
        type: "error",
    },
    {
        inputs: [],
        name: "ProposalAlreadyUpdated",
        type: "error",
    },
    {
        inputs: [],
        name: "ProposalHashDoesNotMatch",
        type: "error",
    },
    {
        inputs: [],
        name: "ProposalHashesEmpty",
        type: "error",
    },
    {
        inputs: [],
        name: "ProposalHashesNotUpdated",
        type: "error",
    },
    {
        inputs: [],
        name: "ReportGCCMustBeLT200Billion",
        type: "error",
    },
    {
        inputs: [],
        name: "ReportWeightMustBeLTUint64MaxDiv5",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "bucketId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "address",
                name: "gca",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "slashNonce",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "totalNewGCC",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "totalGlwRewardsWeight",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "totalGRCRewardsWeight",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "root",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
            },
        ],
        name: "BucketSubmissionEvent",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "agent",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint32[5]",
                name: "plan",
                type: "uint32[5]",
            },
        ],
        name: "CompensationPlanSubmitted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "agent",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "totalSlashableBalance",
                type: "uint256",
            },
        ],
        name: "GCAPayoutClaimed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address[]",
                name: "slashedGcas",
                type: "address[]",
            },
        ],
        name: "GCAsSlashed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address[]",
                name: "newGcas",
                type: "address[]",
            },
        ],
        name: "NewGCAsAppointed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "proposalHash",
                type: "bytes32",
            },
        ],
        name: "ProposalHashPushed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "proposalHash",
                type: "bytes32",
            },
        ],
        name: "ProposalHashUpdate",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "requirementsHash",
                type: "bytes32",
            },
        ],
        name: "RequirementsHashUpdated",
        type: "event",
    },
    {
        inputs: [],
        name: "allGcas",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "bucketId",
                type: "uint256",
            },
        ],
        name: "bucket",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint64",
                        name: "originalNonce",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "lastUpdatedNonce",
                        type: "uint64",
                    },
                    {
                        internalType: "uint128",
                        name: "finalizationTimestamp",
                        type: "uint128",
                    },
                    {
                        components: [
                            {
                                internalType: "uint128",
                                name: "totalNewGCC",
                                type: "uint128",
                            },
                            {
                                internalType: "uint64",
                                name: "totalGLWRewardsWeight",
                                type: "uint64",
                            },
                            {
                                internalType: "uint64",
                                name: "totalGRCRewardsWeight",
                                type: "uint64",
                            },
                            {
                                internalType: "bytes32",
                                name: "merkleRoot",
                                type: "bytes32",
                            },
                            {
                                internalType: "address",
                                name: "proposingAgent",
                                type: "address",
                            },
                        ],
                        internalType: "struct IGCA.Report[]",
                        name: "reports",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct IGCA.Bucket",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "bucketId",
                type: "uint256",
            },
        ],
        name: "bucketGlobalState",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint128",
                        name: "totalNewGCC",
                        type: "uint128",
                    },
                    {
                        internalType: "uint64",
                        name: "totalGLWRewardsWeight",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "totalGRCRewardsWeight",
                        type: "uint64",
                    },
                ],
                internalType: "struct IGCA.BucketGlobalState",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "claimGlowFromInflation",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "gca",
                type: "address",
            },
        ],
        name: "gcaPayoutData",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint64",
                        name: "lastClaimedTimestamp",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "maxClaimTimestamp",
                        type: "uint64",
                    },
                    {
                        internalType: "uint128",
                        name: "totalSlashableBalance",
                        type: "uint128",
                    },
                ],
                internalType: "struct IGCA.GCAPayout",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "start",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "end",
                type: "uint256",
            },
        ],
        name: "getProposalHashes",
        outputs: [
            {
                internalType: "bytes32[]",
                name: "",
                type: "bytes32[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getProposalHashes",
        outputs: [
            {
                internalType: "bytes32[]",
                name: "",
                type: "bytes32[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "bucketId",
                type: "uint256",
            },
        ],
        name: "isBucketFinalized",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "isGCA",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
        ],
        name: "isGCA",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "hash",
                type: "bytes32",
            },
            {
                internalType: "bool",
                name: "incrementSlashNonce",
                type: "bool",
            },
        ],
        name: "pushHash",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_requirementsHash",
                type: "bytes32",
            },
        ],
        name: "setRequirementsHash",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32[5]",
                name: "plan",
                type: "uint32[5]",
            },
            {
                internalType: "uint256",
                name: "indexOfGCA",
                type: "uint256",
            },
        ],
        name: "submitCompensationPlan",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IGCA__factory {
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IGCA__factory = IGCA__factory;
//# sourceMappingURL=IGCA__factory.js.map