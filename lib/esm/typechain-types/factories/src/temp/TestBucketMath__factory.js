/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "BUCKET_LENGTH",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "BUCKET_VESTING_SHIFT",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "VESTING_WEEK_LENGTH",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "deposit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "bucketId",
                type: "uint256",
            },
        ],
        name: "getBucketValue",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getCurrentBucket",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "lastUpdatedWeek",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "totalDeposit",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalDeposited",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "totalToDeduce",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60a060405234801561000f575f80fd5b50426080526080516104a161002c5f395f6103ac01526104a15ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c8063b6b55f2511610063578063b6b55f25146100fe578063c43a43e814610113578063cd4c4c0c14610132578063f1c286d41461013a578063ff50abdc14610142575f80fd5b80635bba5a691461009f57806371702506146100d05780638219f37d146100d85780639a3725e3146100eb5780639d65b892146100f5575b5f80fd5b6100be6100ad3660046103e0565b60016020525f908152604090205481565b60405190815260200160405180910390f35b6100be601a81565b6100be6100e63660046103e0565b61014b565b6100be62093a8081565b6100be60025481565b61011161010c3660046103e0565b610289565b005b6100be6101213660046103e0565b5f6020819052908152604090205481565b6100be6103a2565b6100be603481565b6100be60035481565b5f601a6101566103a2565b610160919061040b565b82106101aa5760405162461bcd60e51b815260206004820152601560248201527446696e616c697a6174696f6e204e6f7420446f6e6560581b604482015260640160405180910390fd5b601a8210156101ba57505f919050565b815f80806101c9601a85610424565b815260208082019290925260409081015f90812054878252600190935220549091505b845f036101fd57505f949350505050565b60346102098685610424565b1061021857505f949350505050565b811561023d57603461022a8284610424565b6102349190610437565b95945050505050565b61024685610456565b94505f80610255601a88610424565b81526020019081526020015f2054915060015f8681526020019081526020015f205481610282919061040b565b90506101ec565b5f6102926103a2565b6002549091508181036102fe575f82815260208190526040812080548592906102bc90849061040b565b9091555083905060015f601a6102d360348761040b565b6102dd919061040b565b81526020019081526020015f205f8282546102f8919061040b565b90915550505b81811461039b575b5f8181526020819052604090205480151580610320575081155b1561038a575f8381526001602052604090205461033d828661040b565b6103479190610424565b5f848152602081905260408120919091558490600190601a61036a60348861040b565b610374919061040b565b815260208101919091526040015f20555061039b565b61039382610456565b915050610306565b5060025550565b5f62093a806103d17f000000000000000000000000000000000000000000000000000000000000000042610424565b6103db9190610437565b905090565b5f602082840312156103f0575f80fd5b5035919050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561041e5761041e6103f7565b92915050565b8181038181111561041e5761041e6103f7565b5f8261045157634e487b7160e01b5f52601260045260245ffd5b500490565b5f81610464576104646103f7565b505f19019056fea2646970667358221220b726b484f0c35f9af24511f0d87d39c9e3a192b3afcd031d7109c0a3d1d7c12264736f6c63430008150033";
const isSuperArgs = (xs) => xs.length > 1;
export class TestBucketMath__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
//# sourceMappingURL=TestBucketMath__factory.js.map