/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "BUCKET_DURATION",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "GENESIS_TIMESTAMP",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "OFFSET_LEFT",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "OFFSET_RIGHT",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "TOTAL_VESTING_PERIODS",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "addToCurrentBucket",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "currentBucket",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "start",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "end",
                type: "uint256",
            },
        ],
        name: "getRewards",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "inheritedFromLastWeek",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "amountInBucket",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amountToDeduct",
                        type: "uint256",
                    },
                ],
                internalType: "struct MinerDistributionMath.WeeklyReward[]",
                name: "",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "lastUpdatedBucket",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
        ],
        name: "reward",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "inheritedFromLastWeek",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "amountInBucket",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amountToDeduct",
                        type: "uint256",
                    },
                ],
                internalType: "struct MinerDistributionMath.WeeklyReward",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "rewards",
        outputs: [
            {
                internalType: "bool",
                name: "inheritedFromLastWeek",
                type: "bool",
            },
            {
                internalType: "uint256",
                name: "amountInBucket",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "amountToDeduct",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60a060405234801561000f575f80fd5b50426080526080516108c26100325f395f818160af01526101c501526108c25ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063a9fb763c1161006e578063a9fb763c14610112578063cc11298e14610132578063ceb055f014610152578063e1ada6b61461015a578063f301af4214610162578063f6e8eb20146101b1575f80fd5b80630c204d44146100aa578063202f0057146100e45780634f127aae146100ec5780635fbf522f146100f45780639c8a7af4146100fd575b5f80fd5b6100d17f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100d160d081565b6100d16101bb565b6100d160015481565b61011061010b3660046106b1565b6101f9565b005b6101256101203660046106b1565b610473565b6040516100db91906106c8565b6101456101403660046106eb565b610584565b6040516100db919061070b565b6100d1601081565b6100d16106a2565b6101946101703660046106b1565b5f6020819052908152604090208054600182015460029092015460ff909116919083565b6040805193151584526020840192909252908201526060016100db565b6100d162093a8081565b5f62093a806101ea7f000000000000000000000000000000000000000000000000000000000000000042610782565b6101f49190610795565b905090565b5f6102026101bb565b90505f6102106010836107b4565b90505f61021f601060d0610782565b61022990836107b4565b6102349060016107b4565b90505f610243601060d0610782565b61024d9086610795565b6001549091505f8590036102d2575f848152602081905260408120600101805484929061027b9084906107b4565b90915550505f83815260208190526040812060020180548492906102a09084906107b4565b90915550505f848152602081905260409020805460ff191660011790558084146102ca5760018490555b505050505050565b5f84815260208181526040918290208251606081018452815460ff16158015825260018301549382019390935260029091015492810192909252610363575f85815260208190526040812060010180548592906103309084906107b4565b90915550505f84815260208190526040812060020180548592906103559084906107b4565b909155505050505050505050565b5f828152602081815260408083208151606081018352815460ff16151581526001820154818501526002918201548184015288855292849052908320018054919286926103b19084906107b4565b90915550506040820151835b878110156103f2575f818152602081905260409020600201546103e090836107b4565b91506103eb816107c7565b90506103bd565b5060405180606001604052806001151581526020018287856020015161041891906107b4565b6104229190610782565b81525f60209182018190528981528082526040908190208351815460ff191690151517815591830151600183015591909101516002909101558387146104685760018790555b505050505050505050565b61049660405180606001604052805f151581526020015f81526020015f81525090565b5f82815260208181526040918290208251606081018452815460ff16151580825260018301549382019390935260029091015492810192909252806104db5750601083105b156104e65792915050565b60408101515f6104f7600186610782565b90505b5f808083610507816107df565b90825260208083019390935260409182015f208251606081018452815460ff161515815260018201549481019490945260020154918301829052935090915061055090846107b4565b8151909350156105755782816020015161056a9190610782565b60208501525061057b565b506104fa565b50909392505050565b60605f6105918484610782565b67ffffffffffffffff8111156105a9576105a96107f4565b6040519080825280602002602001820160405280156105fd57816020015b6105ea60405180606001604052805f151581526020015f81526020015f81525090565b8152602001906001900390816105c75790505b509050835b8381101561069857604051632a7edd8f60e21b815260048101829052309063a9fb763c90602401606060405180830381865afa158015610644573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106689190610808565b82828151811061067a5761067a610878565b60200260200101819052508080610690906107c7565b915050610602565b5090505b92915050565b6106ae601060d0610782565b81565b5f602082840312156106c1575f80fd5b5035919050565b81511515815260208083015190820152604080830151908201526060810161069c565b5f80604083850312156106fc575f80fd5b50508035926020909101359150565b602080825282518282018190525f9190848201906040850190845b818110156107625761074f83855180511515825260208082015190830152604090810151910152565b9284019260609290920191600101610726565b50909695505050505050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561069c5761069c61076e565b5f826107af57634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561069c5761069c61076e565b5f600182016107d8576107d861076e565b5060010190565b5f816107ed576107ed61076e565b505f190190565b634e487b7160e01b5f52604160045260245ffd5b5f60608284031215610818575f80fd5b6040516060810181811067ffffffffffffffff8211171561084757634e487b7160e01b5f52604160045260245ffd5b60405282518015158114610859575f80fd5b8152602083810151908201526040928301519281019290925250919050565b634e487b7160e01b5f52603260045260245ffdfea264697066735822122099967512896615e87764364c31b1d509e95480ce804b6a3cc9917db9d18992d464736f6c63430008150033";
const isSuperArgs = (xs) => xs.length > 1;
export class MinerDistributionMath__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
//# sourceMappingURL=MinerDistributionMath__factory.js.map