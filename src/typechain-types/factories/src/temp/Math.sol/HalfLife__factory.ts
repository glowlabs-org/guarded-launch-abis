/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HalfLife,
  HalfLifeInterface,
} from "../../../../src/temp/Math.sol/HalfLife";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "elapsedSeconds",
        type: "uint256",
      },
    ],
    name: "calculateHalfLifeValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "";

type HalfLifeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HalfLifeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HalfLife__factory extends ContractFactory {
  constructor(...args: HalfLifeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HalfLife> {
    return super.deploy(overrides || {}) as Promise<HalfLife>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HalfLife {
    return super.attach(address) as HalfLife;
  }
  override connect(signer: Signer): HalfLife__factory {
    return super.connect(signer) as HalfLife__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HalfLifeInterface {
    return new utils.Interface(_abi) as HalfLifeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HalfLife {
    return new Contract(address, _abi, signerOrProvider) as HalfLife;
  }
}
