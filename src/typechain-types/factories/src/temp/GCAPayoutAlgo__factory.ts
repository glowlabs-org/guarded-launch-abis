/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GCAPayoutAlgo,
  GCAPayoutAlgoInterface,
} from "../../../src/temp/GCAPayoutAlgo";

const _abi = [
  {
    inputs: [],
    name: "NotAnAgent",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gca",
        type: "address",
      },
    ],
    name: "addGCA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "oldAccounts",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "newAccounts",
        type: "address[]",
      },
    ],
    name: "editSeats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gca",
        type: "address",
      },
    ],
    name: "helpers",
    outputs: [
      {
        components: [
          {
            internalType: "uint96",
            name: "lastRewardTimestamp",
            type: "uint96",
          },
          {
            internalType: "uint96",
            name: "shares",
            type: "uint96",
          },
          {
            internalType: "bool",
            name: "isGCA",
            type: "bool",
          },
        ],
        internalType: "struct Helper",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gca",
        type: "address",
      },
    ],
    name: "nextReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mockTimestamp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "gca",
        type: "address",
      },
    ],
    name: "nextRewardMockTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposedCompensationPlans",
    outputs: [
      {
        internalType: "uint80",
        name: "shares",
        type: "uint80",
      },
      {
        internalType: "address",
        name: "agent",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gca",
        type: "address",
      },
    ],
    name: "removeGCA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsPerSecondForAll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint80",
            name: "shares",
            type: "uint80",
          },
          {
            internalType: "address",
            name: "agent",
            type: "address",
          },
        ],
        internalType: "struct CompensationI[]",
        name: "compensationPlan",
        type: "tuple[]",
      },
    ],
    name: "submitCompensationPlan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052670de0b6b3a764000060045534801561001b575f80fd5b50610ed7806100295f395ff3fe608060405234801561000f575f80fd5b50600436106100b1575f3560e01c80633a98ef391161006e5780633a98ef39146101dd5780635c46b6cf146101f45780639b8b7c9914610207578063d6b41a4214610241578063e3d670d71461024a578063ec327d0a14610269575f80fd5b80631263a7d9146100b5578063142768bc146100ee57806326dbb2cd146101015780632a41e02e1461011457806333dc5171146101c2578063372500ab146101d5575b5f80fd5b6100ec6100c3366004610b99565b6001600160a01b03165f908152602081905260409020805460ff60c01b1916600160c01b179055565b005b6100ec6100fc366004610b99565b61027c565b6100ec61010f366004610bbb565b6103cc565b61018b610122366004610b99565b60408051606080820183525f80835260208084018290529284018190526001600160a01b039490941684528382529282902082519384018352546001600160601b038082168552600160601b82041691840191909152600160c01b900460ff1615159082015290565b6040805182516001600160601b03908116825260208085015190911690820152918101511515908201526060015b60405180910390f35b6100ec6101d0366004610c72565b6107fe565b6100ec610950565b6101e660035481565b6040519081526020016101b9565b6101e6610202366004610b99565b6109ab565b61021a610215366004610cd9565b610a4a565b604080516001600160501b0390931683526001600160a01b039091166020830152016101b9565b6101e660045481565b6101e6610258366004610b99565b60016020525f908152604090205481565b6101e6610277366004610d03565b610a8f565b6001600160a01b0381165f9081526020819052604081205460038054600160601b9092046001600160601b03169290916102b7908490610d45565b90915550506001600160a01b0381165f908152600260205260408120805490915b8181101561039f578281815481106102f2576102f2610d58565b5f91825260208220015484546001600160501b039091169190819086908590811061031f5761031f610d58565b5f91825260208083209190910154600160501b90046001600160a01b0316835282019290925260400190208054600c9061036a908490600160601b90046001600160601b0316610d6c565b92506101000a8154816001600160601b0302191690836001600160601b031602179055508061039890610d93565b90506102d8565b50505f908190556001600160a01b03909116815260208190526040902080546001600160c81b0319169055565b5f6103d6336109ab565b11156103e4576103e4610950565b335f90815260208190526040902054600160c01b900460ff1661041a57604051630483ff7960e11b815260040160405180910390fd5b335f9081526002602052604081208054909181610437575f61043b565b6127105b90505f5b828110156105065783818154811061045957610459610d58565b5f91825260208220015485546001600160501b039091169190819087908590811061048657610486610d58565b5f91825260208083209190910154600160501b90046001600160a01b0316835282019290925260400190208054600c906104d1908490600160601b90046001600160601b0316610d6c565b92506101000a8154816001600160601b0302191690836001600160601b03160217905550806104ff90610d93565b905061043f565b505f808455805b85811015610793575f8088888481811061052957610529610d58565b90506040020160200160208101906105419190610b99565b6001600160a01b0316815260208101919091526040015f2054600160c01b900460ff1661058157604051630483ff7960e11b815260040160405180910390fd5b86868281811061059357610593610d58565b6105a99260206040909202019081019150610dbf565b6105bc906001600160501b031683610dda565b91505f808888848181106105d2576105d2610d58565b90506040020160200160208101906105ea9190610b99565b6001600160a01b0316815260208101919091526040015f908120546001600160601b0316900361067d57425f8089898581811061062957610629610d58565b90506040020160200160208101906106419190610b99565b6001600160a01b0316815260208101919091526040015f2080546bffffffffffffffffffffffff19166001600160601b03929092169190911790555b86868281811061068f5761068f610d58565b6106a59260206040909202019081019150610dbf565b6001600160501b03165f808989858181106106c2576106c2610d58565b90506040020160200160208101906106da9190610b99565b6001600160a01b0316815260208101919091526040015f208054600c90610712908490600160601b90046001600160601b0316610ded565b82546001600160601b039182166101009390930a928302919092021990911617905550335f90815260026020526040902087878381811061075557610755610d58565b83546001810185555f9485526020909420604090910292909201929190910190506107808282610e0d565b50508061078c90610d93565b905061050d565b5061271081146107d75760405162461bcd60e51b815260206004820152600a60248201526906e6f742031302c3030360b41b60448201526064015b60405180910390fd5b6107e18282610d45565b60035f8282546107f19190610dda565b9091555050505050505050565b5f5b838110156108d1575f60025f87878581811061081e5761081e610d58565b90506020020160208101906108339190610b99565b6001600160a01b0316815260208101919091526040015f2080549091501561086e5761271060035f8282546108689190610d45565b90915550505b5f8082558087878581811061088557610885610d58565b905060200201602081019061089a9190610b99565b6001600160a01b0316815260208101919091526040015f2080546001600160c81b0319169055506108ca81610d93565b9050610800565b505f5b818110156109495760015f808585858181106108f2576108f2610d58565b90506020020160208101906109079190610b99565b6001600160a01b0316815260208101919091526040015f208054911515600160c01b0260ff60c01b1990921691909117905561094281610d93565b90506108d4565b5050505050565b5f61095a336109ab565b335f9081526020818152604080832080546bffffffffffffffffffffffff1916426001600160601b031617905560019091528120805492935083929091906109a3908490610dda565b909155505050565b6003545f908082036109bf57505f92915050565b6001600160a01b0383165f9081526020819052604090208054600160c01b900460ff166109ff57604051630483ff7960e11b815260040160405180910390fd5b805460045483916001600160601b03600160601b820481169291610a24911642610d45565b610a2e9190610e6b565b610a389190610e6b565b610a429190610e82565b949350505050565b6002602052815f5260405f208181548110610a63575f80fd5b5f918252602090912001546001600160501b0381169250600160501b90046001600160a01b0316905082565b6001600160a01b0381165f9081526020819052604081208054600160c01b900460ff16610acf57604051630483ff7960e11b815260040160405180910390fd5b80546001600160601b0316841015610b355760405162461bcd60e51b815260206004820152602360248201527f6d6f636b54696d657374616d70203c206c61737452657761726454696d6573746044820152620616d760ec1b60648201526084016107ce565b60035481546004546001600160601b03600160601b8304811692610b5a911688610d45565b610b649190610e6b565b610b6e9190610e6b565b610b789190610e82565b9150505b92915050565b6001600160a01b0381168114610b96575f80fd5b50565b5f60208284031215610ba9575f80fd5b8135610bb481610b82565b9392505050565b5f8060208385031215610bcc575f80fd5b823567ffffffffffffffff80821115610be3575f80fd5b818501915085601f830112610bf6575f80fd5b813581811115610c04575f80fd5b8660208260061b8501011115610c18575f80fd5b60209290920196919550909350505050565b5f8083601f840112610c3a575f80fd5b50813567ffffffffffffffff811115610c51575f80fd5b6020830191508360208260051b8501011115610c6b575f80fd5b9250929050565b5f805f8060408587031215610c85575f80fd5b843567ffffffffffffffff80821115610c9c575f80fd5b610ca888838901610c2a565b90965094506020870135915080821115610cc0575f80fd5b50610ccd87828801610c2a565b95989497509550505050565b5f8060408385031215610cea575f80fd5b8235610cf581610b82565b946020939093013593505050565b5f8060408385031215610d14575f80fd5b823591506020830135610d2681610b82565b809150509250929050565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610b7c57610b7c610d31565b634e487b7160e01b5f52603260045260245ffd5b6001600160601b03828116828216039080821115610d8c57610d8c610d31565b5092915050565b5f60018201610da457610da4610d31565b5060010190565b6001600160501b0381168114610b96575f80fd5b5f60208284031215610dcf575f80fd5b8135610bb481610dab565b80820180821115610b7c57610b7c610d31565b6001600160601b03818116838216019080821115610d8c57610d8c610d31565b8135610e1881610dab565b6001600160501b03811690508154816001600160501b031982161783556020840135610e4381610b82565b6001600160f01b03199190911690911760509190911b600160501b600160f01b031617905550565b8082028115828204841417610b7c57610b7c610d31565b5f82610e9c57634e487b7160e01b5f52601260045260245ffd5b50049056fea26469706673582212201dd011227776c7b02d1f1fa0bf2af63e297964759264f3905a3c52a56ba4153864736f6c63430008150033";

type GCAPayoutAlgoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GCAPayoutAlgoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GCAPayoutAlgo__factory extends ContractFactory {
  constructor(...args: GCAPayoutAlgoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GCAPayoutAlgo> {
    return super.deploy(overrides || {}) as Promise<GCAPayoutAlgo>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GCAPayoutAlgo {
    return super.attach(address) as GCAPayoutAlgo;
  }
  override connect(signer: Signer): GCAPayoutAlgo__factory {
    return super.connect(signer) as GCAPayoutAlgo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GCAPayoutAlgoInterface {
    return new utils.Interface(_abi) as GCAPayoutAlgoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GCAPayoutAlgo {
    return new Contract(address, _abi, signerOrProvider) as GCAPayoutAlgo;
  }
}
