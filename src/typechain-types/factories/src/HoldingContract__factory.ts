/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HoldingContract,
  HoldingContractInterface,
} from "../../src/HoldingContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_minerPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vetoCouncil",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OnlyMinerPoolCanAddHoldings",
    type: "error",
  },
  {
    inputs: [],
    name: "MINER_POOL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VETO_COUNCIL",
    outputs: [
      {
        internalType: "contract IVetoCouncil",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "amount",
        type: "uint192",
      },
    ],
    name: "addHolding",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "holdings",
    outputs: [
      {
        components: [
          {
            internalType: "uint192",
            name: "amount",
            type: "uint192",
          },
          {
            internalType: "uint64",
            name: "timestamp",
            type: "uint64",
          },
        ],
        internalType: "struct HoldingContract.Holding[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561000f575f80fd5b5060405161047238038061047283398101604081905261002e91610060565b6001600160a01b039182166080521660a052610091565b80516001600160a01b038116811461005b575f80fd5b919050565b5f8060408385031215610071575f80fd5b61007a83610045565b915061008860208401610045565b90509250929050565b60805160a0516103bb6100b75f395f609101525f818160d0015261019a01526103bb5ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80634036ff2e1461004e5780634cc2cb67146100775780637a6471891461008c578063d203d5a0146100cb575b5f80fd5b61006161005c366004610285565b6100f2565b60405161006e91906102b6565b60405180910390f35b61008a610085366004610317565b61018f565b005b6100b37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161006e565b6100b37f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b038083165f908152602081815260408083209385168352928152828220805484518184028101840190955280855260609493919290919084015b82821015610182575f84815260209081902060408051808201909152908401546001600160c01b0381168252600160c01b900467ffffffffffffffff1681830152825260019092019101610133565b5050505090505b92915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101d85760405163258e325f60e11b815260040160405180910390fd5b6001600160a01b038084165f9081526020818152604080832093861683529281529082902082518084019093526001600160c01b03841683529190810161022262093a8042610366565b67ffffffffffffffff90811690915282546001810184555f93845260209384902083519490930151909116600160c01b026001600160c01b0390931692909217910155505050565b80356001600160a01b0381168114610280575f80fd5b919050565b5f8060408385031215610296575f80fd5b61029f8361026a565b91506102ad6020840161026a565b90509250929050565b602080825282518282018190525f919060409081850190868401855b8281101561030a57815180516001600160c01b0316855286015167ffffffffffffffff168685015292840192908501906001016102d2565b5091979650505050505050565b5f805f60608486031215610329575f80fd5b6103328461026a565b92506103406020850161026a565b915060408401356001600160c01b038116811461035b575f80fd5b809150509250925092565b8082018082111561018957634e487b7160e01b5f52601160045260245ffdfea26469706673582212202b19ad26286f4a5b38e8713373a0c8c7a8f793936f6675c7e997e6592c06081564736f6c63430008150033";

type HoldingContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HoldingContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HoldingContract__factory extends ContractFactory {
  constructor(...args: HoldingContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _minerPool: string,
    _vetoCouncil: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HoldingContract> {
    return super.deploy(
      _minerPool,
      _vetoCouncil,
      overrides || {}
    ) as Promise<HoldingContract>;
  }
  override getDeployTransaction(
    _minerPool: string,
    _vetoCouncil: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _minerPool,
      _vetoCouncil,
      overrides || {}
    );
  }
  override attach(address: string): HoldingContract {
    return super.attach(address) as HoldingContract;
  }
  override connect(signer: Signer): HoldingContract__factory {
    return super.connect(signer) as HoldingContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HoldingContractInterface {
    return new utils.Interface(_abi) as HoldingContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HoldingContract {
    return new Contract(address, _abi, signerOrProvider) as HoldingContract;
  }
}
