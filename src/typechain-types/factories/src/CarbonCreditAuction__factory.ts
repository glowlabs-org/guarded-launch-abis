/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CarbonCreditAuction,
  CarbonCreditAuctionInterface,
} from "../../src/CarbonCreditAuction";

const _abi = [
  {
    inputs: [],
    name: "MaxPriceGreaterThanNextPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "NextNotInList",
    type: "error",
  },
  {
    inputs: [],
    name: "PrevNotInList",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "receiveGCC",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600e575f80fd5b5060868061001b5f395ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c80632d8d08de14602a575b5f80fd5b60386035366004603a565b50565b005b5f602082840312156049575f80fd5b503591905056fea2646970667358221220a559b0f2c467b660f74f8179dfa2e8a1bab336c61a472662765a30b9a53a8c0364736f6c63430008150033";

type CarbonCreditAuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CarbonCreditAuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CarbonCreditAuction__factory extends ContractFactory {
  constructor(...args: CarbonCreditAuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CarbonCreditAuction> {
    return super.deploy(overrides || {}) as Promise<CarbonCreditAuction>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CarbonCreditAuction {
    return super.attach(address) as CarbonCreditAuction;
  }
  override connect(signer: Signer): CarbonCreditAuction__factory {
    return super.connect(signer) as CarbonCreditAuction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CarbonCreditAuctionInterface {
    return new utils.Interface(_abi) as CarbonCreditAuctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CarbonCreditAuction {
    return new Contract(address, _abi, signerOrProvider) as CarbonCreditAuction;
  }
}
